<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:reg="http://www.dangdang.com/schema/ddframe/reg" 
    xmlns:job="http://www.dangdang.com/schema/ddframe/job" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans.xsd 
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context.xsd 
                        http://www.dangdang.com/schema/ddframe/reg 
                        http://www.dangdang.com/schema/ddframe/reg/reg.xsd 
                        http://www.dangdang.com/schema/ddframe/job 
                        http://www.dangdang.com/schema/ddframe/job/job.xsd 
                        ">
    <context:component-scan base-package="com.dangdang.example.elasticjob" />
    <context:property-placeholder location="classpath:conf/*.properties" />
    
    <reg:zookeeper id="regCenter" serverLists="${serverLists}" namespace="${namespace}" baseSleepTimeMilliseconds="${baseSleepTimeMilliseconds}" maxSleepTimeMilliseconds="${maxSleepTimeMilliseconds}" maxRetries="${maxRetries}" />
    
    <!--<job:bean id="oneOffElasticJob" class="com.dangdang.example.elasticjob.spring.job.OneOffElasticDemoJob" regCenter="regCenter" shardingTotalCount="${oneOffElasticJob.shardingTotalCount}" cron="${oneOffElasticJob.cron}" shardingItemParameters="${oneOffElasticJob.shardingItemParameters}" monitorExecution="${oneOffElasticJob.monitorExecution}" failover="${oneOffElasticJob.failover}" description="${oneOffElasticJob.description}" disabled="${oneOffElasticJob.disabled}" overwrite="${oneOffElasticJob.overwrite}" />
    
     <job:bean id="perpetualElasticJob" class="com.dangdang.example.elasticjob.spring.job.PerpetualElasticDemoJob" regCenter="regCenter" shardingTotalCount="${perpetualElasticJob.shardingTotalCount}" cron="${perpetualElasticJob.cron}" shardingItemParameters="${perpetualElasticJob.shardingItemParameters}" monitorExecution="${perpetualElasticJob.monitorExecution}" failover="${perpetualElasticJob.failover}" processCountIntervalSeconds="${perpetualElasticJob.processCountIntervalSeconds}" concurrentDataProcessThreadCount="${perpetualElasticJob.concurrentDataProcessThreadCount}" description="${perpetualElasticJob.description}" disabled="${perpetualElasticJob.disabled}" overwrite="${perpetualElasticJob.overwrite}" /> 
    -->
    <job:bean id="sequencePerpetualElasticJob" class="com.dangdang.example.elasticjob.spring.job.SequencePerpetualElasticDemoJob" regCenter="regCenter" shardingTotalCount="${sequencePerpetualElasticJob.shardingTotalCount}" cron="${sequencePerpetualElasticJob.cron}" shardingItemParameters="${sequencePerpetualElasticJob.shardingItemParameters}" monitorExecution="${sequencePerpetualElasticJob.monitorExecution}" failover="${sequencePerpetualElasticJob.failover}" processCountIntervalSeconds="${sequencePerpetualElasticJob.processCountIntervalSeconds}" description="${sequencePerpetualElasticJob.description}" disabled="${sequencePerpetualElasticJob.disabled}" overwrite="${sequencePerpetualElasticJob.overwrite}" />
    
</beans>
